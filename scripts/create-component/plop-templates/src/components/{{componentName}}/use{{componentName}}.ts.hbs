import * as React from 'react';
import { getNativeElementProps } from '@fluentui/react-utilities';
import type { {{componentName}}Props, {{componentName}}State, {{componentName}}Render } from './{{componentName}}.types';
import { render{{componentName}}_unstable } from './render{{componentName}}_unstable';

/**
 * Create the state required to render {{componentName}}.
 *
 * The returned state can be modified with hooks such as use{{componentName}}Styles_unstable,
 * before being passed to render{{componentName}}_unstable.
 *
 * @param props - props from this instance of {{componentName}}
 * @param ref - reference to root HTMLElement of {{componentName}}
 */
export const use{{componentName}}_unstable = (
  props: {{componentName}}Props,
  ref: React.Ref<HTMLElement>
): [{{componentName}}State, {{componentName}}Render] => {
  const state: {{componentName}}State = {
    // TODO add appropriate props/defaults
    components: {
      // TODO add each slot's element type or component
      root: 'div',
    },
    // TODO add appropriate slots, for example:
    // mySlot: resolveShorthand(props.mySlot),
    root: getNativeElementProps('div', {
      ref,
      ...props,
    }),
  };
  return [state, render{{componentName}}_unstable];
};
